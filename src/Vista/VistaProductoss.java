/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Controlador.ProductoControlador;
import Entidades.Producto;
import DAO.DAOProducto;
import java.sql.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.Date;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import java.awt.FileDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author D23
 */
public class VistaProductoss extends javax.swing.JPanel {
private Integer id_productoSeleccionada = null;
   private final ProductoControlador controladorProducto;

    /**
     * Creates new form VistaProducto
     */
    public VistaProductoss() {
        initComponents();
        this.controladorProducto = new ProductoControlador();
        cargarDatosTabla();
    }

    private void cargarDatosTabla() {
    // Obtener todas las categor√≠as del controlador
    List<Producto> productos = controladorProducto.obtenerTodosProductos();
    if (productos != null) {
        // Obtener el modelo existente de la tabla con un casting adecuado
        DefaultTableModel model = (DefaultTableModel) tablaProductos.getModel();

        // Limpiar las filas existentes
        model.setRowCount(0);

        // Llenar las filas con los datos de los productos
        for (Producto pro : productos) {
            Object[] row = {
                pro.getId_producto(),
                pro.getNombre_prod(),
                pro.getTipo_Prod(),
                pro.getExistencia_Prod(),
                pro.getPrecio_Costo(),
                pro.getPrecio_Venta(),
                pro.getFe_caducidad()
            };
            model.addRow(row);
        }
    }
}
private void limpiar() {
        textNombreProducto.setText("");
        TextTipoproducto.setText("");
        TextExistencia.setText("");
        TextPrecioCosto.setText("");
        TextPrecioVenta.setText("");
        TextBuscador.setText("");
        id_productoSeleccionada = null;
        selectorfechaProducto.setDate(new Date());
        btnBorrar.setEnabled(true);
        btnLimpiar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        textNombreProducto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        ReporteProducto = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        TextBuscador = new javax.swing.JTextField();
        TextPrecioCosto = new javax.swing.JTextField();
        TextTipoproducto = new javax.swing.JTextField();
        TextExistencia = new javax.swing.JTextField();
        TextPrecioVenta = new javax.swing.JTextField();
        selectorfechaProducto = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setEnabled(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel8.setText("Datos de Producto");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, -1));
        jPanel1.add(textNombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 220, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Nombre ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 93, 22));

        btnLimpiar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 93, 22));

        btnBorrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, 93, 22));

        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.setToolTipText("");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, 93, 22));

        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 140, 93, 22));

        ReporteProducto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ReporteProducto.setText("Reporte");
        ReporteProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteProductoActionPerformed(evt);
            }
        });
        jPanel1.add(ReporteProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 140, 100, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("Almacen Rural");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, -1, -1));

        TextBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextBuscadorKeyTyped(evt);
            }
        });
        jPanel1.add(TextBuscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, 350, 32));
        jPanel1.add(TextPrecioCosto, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 220, -1));
        jPanel1.add(TextTipoproducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 220, -1));
        jPanel1.add(TextExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 220, 20));
        jPanel1.add(TextPrecioVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 220, -1));
        jPanel1.add(selectorfechaProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 220, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Existencia");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Tipo");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Precio  Costo");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Fecha de Caducidad");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Precio  Venta");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Tipo", "Existencia", "Precio Costo", "Precio Venta", "Fecha_caducidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProductos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 730, 180));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/291474364_116090381133197_1246855093686710006_n (1)-Photoroom (1).jpg"))); // NOI18N
        jLabel9.setText("jLabel9");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(-270, -60, 1050, 560));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
         Date fecha = this.selectorfechaProducto.getDate();
        java.sql.Date fecha_Caducidad = new java.sql.Date(fecha.getTime());
        String nombre_produ = textNombreProducto.getText();
        String tipo_produ = TextTipoproducto.getText();
        double cantidad_existente = Double.parseDouble(TextExistencia.getText());
        double precio_costo = Double.parseDouble(TextPrecioCosto.getText());
        double precio_venta = Double.parseDouble(TextPrecioVenta.getText());
        if (!nombre_produ.isEmpty() && !tipo_produ.isEmpty()) {
            try {
            
                controladorProducto.crearProducto(nombre_produ, tipo_produ, cantidad_existente,
                        precio_costo, precio_venta, fecha_Caducidad);
                cargarDatosTabla();
            }catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
             }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Llene los campos requeridos. ", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }

     
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed

       int filaSeleccionada = tablaProductos.getSelectedRow();

    if (filaSeleccionada != -1) {
        try {
            // Assuming the ID is stored in column index 0
            Object idObject = tablaProductos.getValueAt(filaSeleccionada, 0);
            int id_producto = Integer.parseInt(idObject.toString()); // Safe conversion

            // Delete the product
            controladorProducto.eliminarProducto(id_producto);
            cargarDatosTabla();
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al obtener el ID del producto.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    
}
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void TextBuscadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextBuscadorKeyTyped
        
       String TextBuscar = TextBuscador.getText().trim().toLowerCase();
    
    // Obtener la lista de productos
    List<Producto> productos = controladorProducto.obtenerTodosProductos();
    DefaultTableModel modelo = (DefaultTableModel) tablaProductos.getModel();
    modelo.setRowCount(0);

    if (productos != null) {
        for (Producto pro : productos) {
            
            // Verificar si el producto coincide con el filtro de b√∫squeda
            if (TextBuscar.isEmpty() || 
                pro.getNombre_prod().toLowerCase().contains(TextBuscar) ||
                pro.getTipo_Prod().toLowerCase().contains(TextBuscar) ||
                String.valueOf(pro.getExistencia_Prod()).contains(TextBuscar) ||
                String.valueOf(pro.getPrecio_Costo()).contains(TextBuscar) ||
                String.valueOf(pro.getPrecio_Venta()).contains(TextBuscar)) {

                // Agregar producto a la tabla si coincide
                Object[] fila = {
                    pro.getId_producto(),
                    pro.getNombre_prod(),
                    pro.getTipo_Prod(),
                    pro.getExistencia_Prod(),
                    pro.getPrecio_Costo(),
                    pro.getPrecio_Venta(),
                    pro.getFe_caducidad()
                };
                modelo.addRow(fila);
            }
        }
    }
    }//GEN-LAST:event_TextBuscadorKeyTyped

    private void tablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseClicked
        // TODO add your handling code here:
            if (evt.getClickCount() == 2) {
            int filaSeleccionada = tablaProductos.getSelectedRow();
            if (filaSeleccionada != -1) {
        
                    id_productoSeleccionada = (int) tablaProductos.getValueAt(filaSeleccionada, 0);
                    String nombre_produ = tablaProductos.getValueAt(filaSeleccionada, 1).toString();
                    String tipo_produ = tablaProductos.getValueAt(filaSeleccionada, 2).toString();
                    double cantidad_existente = Double.parseDouble(tablaProductos.getValueAt(filaSeleccionada, 3).toString());
                    double precio_Costo = Double.parseDouble(tablaProductos.getValueAt(filaSeleccionada, 4).toString());
                    double precio_Venta = Double.parseDouble(tablaProductos.getValueAt(filaSeleccionada, 5).toString());
                    Date fecha = (Date) tablaProductos.getValueAt(filaSeleccionada, 6);

                    // Asignar valores a los campos de texto, convirti√©ndolos a String
                    textNombreProducto.setText(nombre_produ);
                    TextTipoproducto.setText(tipo_produ);
                    TextExistencia.setText(String.valueOf(cantidad_existente));
                    TextPrecioCosto.setText(String.valueOf(precio_Costo));
                    TextPrecioVenta.setText(String.valueOf(precio_Venta));
                    selectorfechaProducto.setDate(fecha);
                    btnBorrar.setEnabled(false);
                    btnGuardar.setEnabled(false);
                }
        }
    }//GEN-LAST:event_tablaProductosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:                                             
    String nombre_produ = textNombreProducto.getText();
    String tipo_produ = TextTipoproducto.getText();

   
        double cantidad_existente = Double.parseDouble(TextExistencia.getText());
        double precio_Costo = Double.parseDouble(TextPrecioCosto.getText());
        double precio_Venta = Double.parseDouble(TextPrecioVenta.getText());
        Date fecha = this.selectorfechaProducto.getDate();
        java.sql.Date fecha_Caducidad = new java.sql.Date(fecha.getTime());
         if (id_productoSeleccionada != null && !nombre_produ.isEmpty() && !tipo_produ.isEmpty()) {
            try {
                controladorProducto.actualizarProducto(id_productoSeleccionada, nombre_produ, tipo_produ, cantidad_existente, precio_Costo,
                        precio_Venta, fecha_Caducidad);
                cargarDatosTabla();
                limpiar();
            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            }else {
javax. swing. JOptionPane. showMessageDialog(this, "Llene los campos obligatorios.", "Error", javax. swing.JOptionPane.ERROR_MESSAGE);

        }


    

// M√©todo para limpiar los campos despu√©s de actualizar

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
limpiar();       // TODO add your handling code here:
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void ReporteProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteProductoActionPerformed
        // TODO add your handling code here:
        try {
            FileDialog dialogoArchivo = new FileDialog((java.awt.Frame) null, "Guardar reporte PDF", FileDialog.SAVE);
            dialogoArchivo.setFile("ReporteProducto.pdf");
            dialogoArchivo.setVisible(true);

            String ruta = dialogoArchivo.getDirectory();
            String nombreArchivo = dialogoArchivo.getFile();

            if (ruta == null || nombreArchivo == null) {
                JOptionPane.showMessageDialog(this, "Opteracion cancelada.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            String rutaCompleta = ruta + nombreArchivo;

            PdfWriter escritor = new PdfWriter(rutaCompleta);
            PdfDocument pdf = new PdfDocument(escritor);
            Document documento = new Document(pdf);

            documento.add(new Paragraph("Reporte deProducto")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(20)
                    .setBold());

            documento.add(new Paragraph("Fecha:" + new java.util.Date().toString())
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(12));

            Table tabla = new Table(7);
            tabla.setWidth(UnitValue.createPercentValue(100));
            tabla.addHeaderCell("ID Producto").setBold();
            tabla.addHeaderCell("Nombre").setBold();
            tabla.addHeaderCell("Tipo").setBold();
            tabla.addHeaderCell("Existencia").setBold();
            tabla.addHeaderCell("Precio Costo").setBold();
            tabla.addHeaderCell("Precio Venta").setBold();
            tabla.addHeaderCell("Fecha Caducidad").setBold();

            List<Producto> listaProducto = controladorProducto.obtenerTodosProductos();
            if (listaProducto != null) {
                for (Producto producto : listaProducto) {
                    tabla.addCell(String.valueOf(producto.getId_producto()));
                    tabla.addCell(producto.getNombre_prod());
                    tabla.addCell(producto.getTipo_Prod());
                    tabla.addCell(String.valueOf(producto.getExistencia_Prod()));
                    tabla.addCell(String.valueOf(producto.getPrecio_Costo()));
                    tabla.addCell(String.valueOf(producto.getPrecio_Venta()));
                    tabla.addCell(String.valueOf(producto.getFe_caducidad()));
                }

            }

            documento.add(tabla);

            documento.add(new Paragraph("Notas: Reporte generado automaticamente desde el sistema")
                    .setFontSize(10)
                    .setMarginTop(28));

            documento.close();
            JOptionPane.showMessageDialog(
                    this,
                    "Reporte PDF Generado con exito en : " + rutaCompleta,
                    "Exito", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al generar el PDF:" + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ReporteProductoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReporteProducto;
    private javax.swing.JTextField TextBuscador;
    private javax.swing.JTextField TextExistencia;
    private javax.swing.JTextField TextPrecioCosto;
    private javax.swing.JTextField TextPrecioVenta;
    private javax.swing.JTextField TextTipoproducto;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser selectorfechaProducto;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField textNombreProducto;
    // End of variables declaration//GEN-END:variables
}
